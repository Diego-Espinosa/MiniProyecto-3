
package View;

import Controller.UsuarioController;
import DAO.ImplementacionUsuarioMapDao;
import DAO.UsuarioDao;
import java.util.List;
import javax.swing.JOptionPane;
import model.Usuario;


public class UsuarioVista extends javax.swing.JFrame {
    private UsuarioController usuarioController;
    /**
     * Creates new form UsuarioVista
     */
    public UsuarioVista() {
        UsuarioDao usuarioDao = new ImplementacionUsuarioMapDao();
        usuarioController = new UsuarioController(usuarioDao);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */ 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nombres = new javax.swing.JTextField();
        ocupaciones = new javax.swing.JTextField();
        prestamoactivo = new javax.swing.JCheckBox();
        parcialmenteactivo = new javax.swing.JCheckBox();
        agregar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        regresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        usuariosTextArea = new javax.swing.JTextArea();
        buscar = new javax.swing.JButton();
        nombreBusqueda = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Nombre: ");

        jLabel2.setText("Ocupacion: ");

        jLabel3.setText("Prestamo Activo:");

        jLabel4.setText("Parcialmente Activo:");

        prestamoactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prestamoactivoActionPerformed(evt);
            }
        });

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        usuariosTextArea.setColumns(20);
        usuariosTextArea.setRows(5);
        jScrollPane1.setViewportView(usuariosTextArea);

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(regresar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(parcialmenteactivo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                    .addComponent(nombreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(13, 13, 13))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nombres, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                        .addComponent(ocupaciones))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(prestamoactivo)
                                    .addGap(63, 63, 63)
                                    .addComponent(buscar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(agregar)
                                    .addGap(29, 29, 29)
                                    .addComponent(actualizar)
                                    .addGap(31, 31, 31)
                                    .addComponent(eliminar))))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addComponent(ocupaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(prestamoactivo))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(parcialmenteactivo))
                    .addComponent(nombreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(actualizar)
                    .addComponent(eliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regresar)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prestamoactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prestamoactivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prestamoactivoActionPerformed
    private void actualizarUsuario() {
        usuariosTextArea.setText("");
        List<Usuario> usuarios = usuarioController.getUsuarios();
        for (Usuario usuario : usuarios) {
            usuariosTextArea.append("Código: " + usuario.getCodigo() + "\n");
            usuariosTextArea.append("Nombre: " + usuario.getName() + "\n");
            usuariosTextArea.append("Ocupación: " + usuario.getOcupacion() + "\n");
            usuariosTextArea.append("Préstamo Activo: " + usuario.isPrestamoaActivo() + "\n");
            usuariosTextArea.append("Parcialmente Activo: " + usuario.isParcialmenteActivo() + "\n");
            usuariosTextArea.append("\n");
        }
    }
    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed

        String nombre = nombres.getText();
        String ocupacion = ocupaciones.getText();
        boolean prestamoActivo  = prestamoactivo.isSelected();
        boolean parcialmenteActivo  = parcialmenteactivo.isSelected();

        usuarioController.agregarUsuario(nombre, ocupacion, prestamoActivo, parcialmenteActivo);
        actualizarUsuario();


        // Limpiar los campos de texto y casillas de verificación
        nombres.setText("");
        ocupaciones.setText("");
        prestamoactivo.setSelected(false);
        parcialmenteactivo.setSelected(false);
            
    }//GEN-LAST:event_agregarActionPerformed
    
    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        Principal frameAnterior = new Principal();
        frameAnterior.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_regresarActionPerformed
    private int obtenerCodigoSeleccionado() {
    String codigoString = JOptionPane.showInputDialog("Ingrese el código del usuario:");
    int codigo = -1;
    try {
        codigo = Integer.parseInt(codigoString);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Código inválido", "Error", JOptionPane.ERROR_MESSAGE);
    }
    return codigo;
}

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        String nombre = nombres.getText();
        String ocupacion = ocupaciones.getText();
        boolean prestamoActivo = prestamoactivo.isSelected();
        boolean parcialmenteActivo = parcialmenteactivo.isSelected();
        
        int codigo = obtenerCodigoSeleccionado();
        if (codigo != -1) {
            usuarioController.actualizarUsuario(codigo, nombre, ocupacion, prestamoActivo, parcialmenteActivo);
            actualizarUsuario();

            // Limpiar los campos de texto y casillas de verificación
            nombres.setText("");
            ocupaciones.setText("");
            prestamoactivo.setSelected(false);
            parcialmenteactivo.setSelected(false);
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        int codigo = obtenerCodigoSeleccionado();
        if (codigo != -1) {
            usuarioController.eliminarUsuario(codigo);
            actualizarUsuario();

            // Limpiar los campos de texto y casillas de verificación
            nombres.setText("");
            ocupaciones.setText("");
            prestamoactivo.setSelected(false);
            parcialmenteactivo.setSelected(false);
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        String nombre = nombreBusqueda.getText().trim();
        if (!nombre.isEmpty()) {
        Usuario usuario = usuarioController.buscarUsuarioPorNombre(nombre);
        if (usuario != null) {
            // Mostrar los detalles del usuario encontrado en los campos de texto
            nombres.setText(usuario.getName());
            ocupaciones.setText(usuario.getOcupacion());
            prestamoactivo.setSelected(usuario.isPrestamoaActivo());
            parcialmenteactivo.setSelected(usuario.isParcialmenteActivo());
        } else {
            JOptionPane.showMessageDialog(this, "Usuario no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_buscarActionPerformed
    private void limpiarCampos() {
        nombres.setText("");
        ocupaciones.setText("");
        prestamoactivo.setSelected(false);
        parcialmenteactivo.setSelected(false);
    }

    private void actualizarUsuarios() {
        List<Usuario> usuarios = usuarioController.getUsuarios();
        usuariosTextArea.setText("");
        for (Usuario usuario : usuarios) {
            usuariosTextArea.append(usuario.toString() + "\n");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        UsuarioDao usuarioDao = new ImplementacionUsuarioMapDao();
        UsuarioController usuarioController = new UsuarioController(usuarioDao);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuarioVista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreBusqueda;
    private javax.swing.JTextField nombres;
    private javax.swing.JTextField ocupaciones;
    private javax.swing.JCheckBox parcialmenteactivo;
    private javax.swing.JCheckBox prestamoactivo;
    private javax.swing.JButton regresar;
    private javax.swing.JTextArea usuariosTextArea;
    // End of variables declaration//GEN-END:variables
}

